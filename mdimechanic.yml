code_name: 'CP2K'
docker:
  image_name: 'mdi/cp2k'
  gpu:
    type: 'nvidia'

  build_image:
    - apt-get clean
    - apt-get update --fix-missing
    - apt-get install -y git cmake wget vim libopenblas-dev libfftw3-dev libfftw3-doc libfftw3-mpi-dev unzip cuda
    - apt-get upgrade -y gcc-12

  build_engine:
    # NOTE: For more guidance about the build process, see:
    # https://github.com/cp2k/cp2k-containers/blob/master/docker/2023.2_mpich_native_cuda_V100_psmp.Dockerfile
    - |
      if [ ! -d "build/cp2k" ]; then
        git clone --recursive https://github.com/cp2k/cp2k.git build/cp2k
      fi
    - cd /repo/build/cp2k/tools/toolchain
    - export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/cuda-12.5/lib64
    - export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/lib/x86_64-linux-gnu/
    - ./install_cp2k_toolchain.sh --with-libxsmm=install --with-openblas=system --with-fftw=system --gpu-ver=K80 --enable-cuda
    - cp /repo/build/cp2k/tools/toolchain/install/arch/* /repo/build/cp2k/arch
    - source /repo/build/cp2k/tools/toolchain/install/setup
    - cd /repo/build/cp2k
    - make -j 8 ARCH=local VERSION="ssmp sdbg"


  validate_engine:
    - cd /repo/tests
    - export PATH=${PATH}:/repo/build/cp2k/exe/local
    - mpiexec -n 4 -genv OMP_NUM_THREADS=1 cp2k.ssmp -i glyco_238.inp

engine_tests:
  # Provide at least one example input that can be used to test your code's MDI functionality
  script:
    - echo "Insert commands to run an example calculation here"
    - exit 1
